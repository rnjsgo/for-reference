plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco' // Java Code Coverage
}

group = 'com.thecommerce'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '1.8'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // db
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // api-doc (swagger)
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
}

// build, bootJar 등의 작업은 test 작업을 포함
tasks.named('test') {
    useJUnitPlatform()
    finalizedBy('jacocoTestReport') // Code Coverage 검사
}

// Jacoco 설정
jacoco {
    toolVersion = "0.8.10"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }

    afterEvaluate { // 테스트 커버리지 측정에서 제외할 파일
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ["com/thecommerce/app/AppApplication.class",
                              "**/dto/**",
                              "**/config/**"
                    ])
        }))
    }
}