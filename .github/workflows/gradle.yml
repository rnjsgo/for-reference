# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Gradle-Test

on:
  pull_request:
    branches: [ main, develop ]

# 워크플로우 권한 설정
permissions:
  contents: read           # 콘텐츠 읽기 권한
  checks: write            # 체크 결과 쓰기 권한
  pull-requests: write     # 풀 리퀘스트 수정 권한

jobs:
  gradle-test:
    runs-on: ubuntu-latest  # 최신 우분투 환경에서 실행

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3.12.0
        with:
          java-version: '8' 
          distribution: 'temurin'
        # JDK 8 설치 및 설정

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        
      - name: Build with Gradle
        run: ./gradlew clean build
        # Gradle을 사용하여 프로젝트를 빌드

      - name: Add Unit Test Results to PR
        uses: mikepenz/action-junit-report@v3.8.0
        if: always()
        with:
          report_paths: app/build/test-results/test/TEST-*.xml
        # 유닛 테스트 결과를 PR에 추가

      - name: Add Jacoco Test coverage to PR
        uses: madrapps/jacoco-report@v1.6.1        
        with:
          paths: |
            ${{ github.workspace }}/app/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Test Coverage Report'
          update-comment: true
          min-coverage-overall: 0
          min-coverage-changed-files: 0
        # Jacoco를 통해 생성된 테스트 커버리지 보고서를 PR에 추가
